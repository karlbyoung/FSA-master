EXECUTE IMMEDIATE
$$
  BEGIN
  LET cur_run_date DATE := CURRENT_DATE();
  SELECT MAX(INSERT_DATE) INTO :cur_run_date FROM DEV.${FSA_CURRENT_SCHEMA}.DEMAND_PO;

/*
	AVAIL_DATE_1
*/

CREATE OR REPLACE TABLE DEV.${FSA_CURRENT_SCHEMA}.SEQUENCING_PO_ASSIGN_TMP1 AS
  SELECT  a.*
          EXCLUDE (PO_QUANTITY_TO_BE_RECEIVED)
        , CASE WHEN PO_INDICATOR_ASSIGN = '1'
                THEN IFF(DDA < :cur_run_date, :cur_run_date, dda."MIN_SUB_12")
               WHEN PO_INDICATOR_ASSIGN = '0'
                THEN IFF(dda90."MIN_SUB_12" < :cur_run_date, today90."MIN_SUB_12", dda90."MIN_SUB_12")
               WHEN PO_INDICATOR_ASSIGN = '-1'
                THEN IFF(PO_RECEIVE_BY_DATE < :cur_run_date, today."MIN_ADD_5", PO_RECEIVE_BY_DATE)
               ELSE NULL
               END AS "AVAIL_DATE"
      
  FROM (
      (SELECT * EXCLUDE OG_QUANTITY_TO_BE_RECEIVED
            , IFF((REMAINING_QTY_ON_HAND >= 0 OR PO_ORDER_NUMBER IS NOT NULL), 1, 0) AS "PO_INDICATOR_ASSIGN"
            , MAX(PO_QUANTITY_TO_BE_RECEIVED) OVER (PARTITION BY ITEM_ID, PO_ORDER_NUMBER) AS "PO_TOTAL_QUANTITY_TO_BE_RECEIVED"
       FROM DEV.${FSA_CURRENT_SCHEMA}.ASSIGNED_DEMAND)

      UNION

      (SELECT *
            , NULL AS "PO_ORDER_NUMBER"
            , NULL AS "PO_QUANTITY_TO_BE_RECEIVED"
            , NULL AS "PO_QUANTITY_REMAINING"
            , NULL AS "PO_RECEIVE_BY_DATE"
            , IFF((REMAINING_QTY_ON_HAND >= 0 OR PO_ORDER_NUMBER IS NOT NULL), 1, 0) AS "PO_INDICATOR_ASSIGN"
            , NULL AS "PO_TOTAL_QUANTITY_TO_BE_RECEIVED"
      FROM DEV.${FSA_CURRENT_SCHEMA}.UNASSIGNED_DEMAND
      WHERE (ORDER_NUMBER, NS_LINE_NUMBER, IFNULL(COMPONENT_ITEM_ID, 0)) NOT IN (
        					SELECT ORDER_NUMBER, NS_LINE_NUMBER, IFNULL(COMPONENT_ITEM_ID, 0) 
                            FROM DEV.${FSA_CURRENT_SCHEMA}.ASSIGNED_DEMAND))
  ) a

  -- DDA    
  LEFT JOIN "DEV"."BUSINESS_OPERATIONS"."DIM_FULFILLMENT_CALENDAR" dda ON dda."RAW_DATE" = DDA::DATE
  -- DDA + 90 DAYS
  LEFT JOIN "DEV"."BUSINESS_OPERATIONS"."DIM_FULFILLMENT_CALENDAR" dda90 ON dda90."RAW_DATE" = DATEADD('day', 90, DDA::DATE)
  -- TODAY
  LEFT JOIN "DEV"."BUSINESS_OPERATIONS"."DIM_FULFILLMENT_CALENDAR" today ON today."RAW_DATE" = :cur_run_date
  -- TODAY + 90 DAYS
  LEFT JOIN "DEV"."BUSINESS_OPERATIONS"."DIM_FULFILLMENT_CALENDAR" today90 ON today90."RAW_DATE" = DATEADD('day', 90, :cur_run_date)
  ORDER BY ITEM_ID, ROW_NO, IFNULL(PO_ID, 0);

/*
	AVAIL_DATE_2
*/

CREATE OR REPLACE TABLE DEV.${FSA_CURRENT_SCHEMA}.SEQUENCING_PO_ASSIGN AS
  SELECT a.* 
         EXCLUDE AVAIL_DATE
       , CASE WHEN PO_INDICATOR_ASSIGN = '1'
               THEN IFF(a.AVAIL_DATE < :cur_run_date, :cur_run_date, AVAIL_DATE)
              WHEN PO_INDICATOR_ASSIGN = '0'
               THEN IFF(AVAIL_DATE < :cur_run_date OR a.AVAIL_DATE IS NULL, today90."MIN_SUB_12", AVAIL_DATE)
              ELSE NULL
              END AS "AVAIL_DATE"
       ,IFF(a.IS_ASSEMBLY_COMPONENT, a.ORDER_NUMBER, a.PO_ORDER_NUMBER) AS "SHARED_ORDER_NUMBER"
  FROM DEV.${FSA_CURRENT_SCHEMA}.SEQUENCING_PO_ASSIGN_TMP1 a
  -- TODAY + 90 DAYS
  LEFT JOIN "DEV"."BUSINESS_OPERATIONS"."DIM_FULFILLMENT_CALENDAR" today90 ON today90."RAW_DATE" = DATEADD('day', 90, :cur_run_date);
  
END;
$$;