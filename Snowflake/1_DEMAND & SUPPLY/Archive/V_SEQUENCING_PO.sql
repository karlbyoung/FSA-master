CREATE OR REPLACE VIEW DEV.BUSINESS_OPERATIONS.V_SEQUENCING_PO (
	ID,
	ITEM_ID,
	ORIGINAL_DDA,
	SEQUENCING_DDA,
	ORDER_NUMBER,
	QTY_ON_HAND,
	QTY_ORDERED,
	REMAINING_QTY_ON_HAND,
	TOTAL_QTY_SOLD,
	DDA,
	ITEM,
	LOCATION,
	NS_LINE_NUMBER,
	ROW_NO,
	PRIORITY,
	SEQ,
	TRANSACTION_TYPE,
	UNIQUE_KEY,
	PO_SLIPPAGE,
	ITEM_ROW_NO,
	SOURCE_TYPE,
	SOURCE_TYPE_DAILY,
	COMPONENT_ITEM,
	COMPONENT_ITEM_ID,
	SOURCE_LOAD_DATE
) AS (
    WITH CTE AS (
        SELECT DPO.BO_STATUS
              ,DPO.COMPONENT_ITEM
              ,DPO.COMPONENT_ITEM_ID
              ,DPO.COMPONENT_QTY_ORDERED
              ,DPO.DDA
              ,DPO.ID
              ,DPO.ITEM
              ,DPO.ITEM_ID
              ,DPO.LOCATION
              ,DPO.NS_LINE_NUMBER
              ,DPO.ORDER_NUMBER
              ,DPO.ORIGINAL_DDA
              ,DPO.PO_SLIPPAGE
              ,DPO.QUANTITY AS "QTY_ORDERED"
              ,DPO.SOURCE_LOAD_DATE_CURRENT AS "SOURCE_LOAD_DATE"
              ,DPO.SOURCE_TYPE
              ,DPO.SOURCE_TYPE_DAILY
              ,DPO.TOTAL_AMT
              ,IFF(DPO.TOTAL_AVAIL_QTY IS NULL, 0, DPO.TOTAL_AVAIL_QTY) AS QTY_ON_HAND
              ,DPO.TRANS_TYPE AS "TRANSACTION_TYPE"
              ,DPO.UNIQUE_KEY
              ,PRI.PRIORITY
              ,PRI.SEQ
              ,DPO.SEQUENCING_DDA
              ,DENSE_RANK() OVER (ORDER BY PRI.PRIORITY,
                                           DPO.SEQUENCING_DDA,
                                           PRI.SEQ,
                                           DPO.ORDER_NUMBER,
                                           DPO.TOTAL_AMT DESC) AS "ROW_NO"
        FROM SANDBOX."BUSINESS_OPERATIONS"."DEMAND_PO" DPO
        LEFT OUTER JOIN SANDBOX."BUSINESS_OPERATIONS"."DEMAND_PRIORITY" PRI
          ON DPO.FK_ID = PRI.ID
    )
SELECT ID
   , ITEM_ID
   , ORIGINAL_DDA
   , SEQUENCING_DDA
   , ORDER_NUMBER
   , QTY_ON_HAND
   , QTY_ORDERED
   , QTY_ON_HAND - (SUM(QTY_ORDERED) OVER (PARTITION BY ITEM_ID ORDER BY ITEM_ID, ROW_NO, ID ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS REMAINING_QTY_ON_HAND -- REMAINING_TOTAL_QTY
   , SUM(QTY_ORDERED) OVER (PARTITION BY ITEM_ID ORDER BY ITEM_ID, ROW_NO, ID ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS TOTAL_QTY_SOLD --SUM_ROLLUP
   , DDA
   , ITEM
   , LOCATION
   , NS_LINE_NUMBER
   , ROW_NO
   , PRIORITY
   , SEQ
   , TRANSACTION_TYPE
   , UNIQUE_KEY
   , PO_SLIPPAGE
   , DENSE_RANK() OVER (ORDER BY ITEM_ID) AS ITEM_ROW_NO
   , SOURCE_TYPE
   , SOURCE_TYPE_DAILY
   , COMPONENT_ITEM
   , COMPONENT_ITEM_ID
   , SOURCE_LOAD_DATE
FROM CTE
ORDER BY ITEM_ID, ROW_NO, ID
);